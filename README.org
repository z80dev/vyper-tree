#+title: Vyper Tree
* Pretty print vyper AST trees
Vyper-Tree can be run as an executable or imported as a module for use in your own programs.

When run as an executable, source code is read from `stdin`, parsed to a vyper AST, and printed to stdout.
** Requirements
- `python` >= 3.10
** Installation
via `pipx` (for use as an executable)
`pipx install vyper-tree`
via `pip` (for use as a module)
`pip install vyper-tree`
** Examples
#+begin_src shell

cat example.vy | vyper_tree
#+end_src
#+begin_src  shell
Contract
├── VariableDecl
│   ├── greet
│   └── Call
│       ├── public
│       └── Subscript
│           ├── String
│           └── Index
│               └── Int: 100
├── Function __init__
│   ├── external
│   ├── Arguments (count: 0)
│   └── Assign
│       ├── greet
│       │   └── self
│       └── "Hello World"
└── Function foo
    ├── external
    ├── Arguments (count: 1)
    │   └── x
    │       └── uint256
    ├── uint256
    ├── AnnAssign
    │   ├── val
    │   ├── uint256
    │   └── Int: 0
    ├── For
    │   ├── i
    │   ├── Call
    │   │   ├── range
    │   │   └── Int: 100000
    │   ├── AugAssign
    │   │   ├── val
    │   │   ├── Add
    │   │   └── Int: 1
    │   └── If
    │       ├── UnaryOp
    │       │   ├── Not
    │       │   └── Compare
    │       │       ├── val
    │       │       ├── Lt
    │       │       └── x
    │       └── Break
    └── Return
        └── val

#+end_src
